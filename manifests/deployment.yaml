apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-java-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-java-app
  template:
    metadata:
      labels:
        app: my-java-app
    spec:
      initContainers:
        - name: init-certificates
          image: openjdk:17-slim
          command:
            - sh
            - -c
            - |
              echo "Copiando keystore al volumen "
              cp -v /usr/local/openjdk-17/lib/security/cacerts /etc/keystore/cacerts || { echo "Error copiando el keystore"; exit 1; }
              
              echo "Importando el certificado en el keystore"
              keytool -importcert -file /etc/certs/server.crt -alias server -keystore /etc/keystore/cacerts -storepass changeit -noprompt
              if [ $? -ne 0 ]; then
                echo "Error al importar el certificado en el keystore"
                exit 1
              fi

              echo "Importando la clave privada en el keystore"
              openssl pkcs12 -export -in /etc/certs/server.crt -inkey /etc/secrets/server.key -out /etc/keystore/server.p12 -passout pass:changeit
              keytool -importkeystore -deststorepass changeit -destkeypass changeit -destkeystore /etc/keystore/cacerts -srckeystore /etc/keystore/server.p12 -srcstoretype PKCS12 -srcstorepass changeit -alias server

              echo "Validando alias 'server' estÃ© en el keystore..."
              keytool -list -keystore /etc/keystore/cacerts -storepass changeit | grep 'server' > /dev/null
              if [ $? -ne 0 ]; then
                echo "Alias 'server' no encontrado"
                exit 1
              else
                echo "Alias 'server' importado exitosamente en el keystore"
              fi

              echo "Cambiando permisos"
              chmod 644 /etc/keystore/cacerts
          volumeMounts:
            - name: certs
              mountPath: /etc/certs
            - name: keystore
              mountPath: /etc/keystore
      containers:
        - name: java-app
          image: local/my-java-app:1.0
          # command: ["java", "-jar", "/app/MyJavaApp.jar"]
          command: ["sh", "-c", "sleep 3600"]
          env:
            - name: JAVA_OPTS
              value: "-Djavax.net.ssl.trustStore=/etc/keystore/cacerts -Djavax.net.ssl.trustStorePassword=changeit"
          ports:
            - containerPort: 8443
          volumeMounts:
            - name: certs
              mountPath: /etc/certs
            - name: keystore
              mountPath: /etc/keystore
            - name: secrets
              mountPath: /etc/secrets
      volumes:
        - name: certs
          configMap:
            name: cert-cfg
        - name: keystore
          emptyDir: {}
        - name: secrets
          secret:
            secretName: cert-cfg